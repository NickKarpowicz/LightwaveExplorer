<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright 2023 Nicholas Karpowicz -->
<component type="desktop-application">
  <id>io.github.NickKarpowicz.LightwaveExplorer</id>
  
  <name>Lightwave Explorer</name>
  <summary>Easily simulate nonlinear optics</summary>
  <launchable type="desktop-id">io.github.NickKarpowicz.LightwaveExplorer.desktop</launchable>
  <developer_name>Nick Karpowicz</developer_name>
  <metadata_license>CC0-1.0</metadata_license>
  <project_license>MIT</project_license>
  <content_rating type="oars-1.1" />
  <releases>
    <release version="2025.3" date="2025-02-27" urgency="high">
  <description>
  <ul>
  <li>Add polarizer() sequence function</li>
  <li>Use OneMath 0.7 for SYCL build</li>
  </ul>
  </description>
  </release>
  <release version="2025.2" date="2025-02-27" urgency="high">
  <description>
  <ul>
  <li>Added new beam visualization mode, where you can make color images of the light field that results from the simulation</li>
  <li>Add new controls for the appearance of plots, which you can access by clicking the ↔️ button on the bottom of the window.</li>
  <li>Fixed a bug where a FROG file loaded for pulse 2 wouldn't be used.</li>
  <li>Fixed a bug where very large grids whose dimensions were divisible by 4 but not by 8 would look weird.</li>
  </ul>
  </description>
  </release>
  <release version="2025.1" date="2025-02-17" urgency="high">
  <description>
  <p>Changes in this version:</p>
  <ul>
  <li>Fixed a bug introduced in 2025.0 where on CUDA the plasma would not affect fields in the y-direction</li>
  <li>Fixed a bug where cancelling a batch job caused the subsequent batch to cancel itself</li>
  <li>Axes and scales are now shown on the space and momentum images, and they're also saved when an SVG is produced.</li>
  <li>Plot font size scaling works better with high-DPI displays</li>
  <li>Refactored device structures to more efficiently and consistently allocate memory</li>
  </ul>
  </description>
  </release>
  <release version="2025.0" date="2025-02-08" urgency="high">
  <description>
  <p>Changes in this version:</p>
  <ul>
  <li>FDTD mode is more accessible: besides the options for crystals in the Propagation pulldown menu, you can also load a custom grid containing different nonlinear materials at different positions using the fdtd() function</li>
  <li>FDTD reflection mode for nonlinear reflection from a surface, using the fdtdReflection() sequence command.</li>
  <li>Improved convergence for the nonlinear absorption/plasma response. Note that the changes I made here will re-scale the values of the nonlinear absorption parameter (now they are consistent with what was in the paper). The conversion factor for older values is (1/(2 pi epsilon_0))^(1/(N_p-1))$ where N_p is the number of photons in the multiphoton transition (divide the old value by this number).</li>
  </ul>
  </description>
  </release>
  <release version="2024.05" date="2024-11-06" urgency="high">
  <description>
  <p>This version fixes issues with biaxial crystals, and introduces a pair of sequence functions, rotateIntoBiaxial() and rotateFromBiaxial() to move in and out of the refractive index ellipse minor and major axes, even for arbitrary crystal orientations.</p>
  <p>It also includes a fix for a bug where files could not be loaded if their names were changed.</p>
  </description>
  </release>
  <release version="2024.04" date="2024-09-19" urgency="high">
  <description>
  <p>This is a bug-fix release, which corrects a missing factor of 2 in UPPE propagation, and corrects the BiBO second order nonlinear tensor</p>
  </description>
  </release>
  <release version="2024.03" date="2024-07-19" urgency="high">
  <description>
  <p>This release moves the GUI from GTK4 to Qt, and has additional improvements such as:</p>
  <ul>
  <li>New applyOptic function: load and apply custom optics in a sequence</li>
  <li>Easier acccess to the FDTD material grid mode</li>
  <li>Improved syntax highlighting and autoformmating for sequences</li>
  <li>Tooltips everywhere</li>
  <li>Slider shows the batch mode values associated with the shown data</li>
  <li>Bug fixes and optimizations, especially for biaxial crystals</li>
  </ul>
  </description>
  </release>
  <release version="2024.02" date="2024-02-18" urgency="high">
  <description>
  <p>This release adds the following fixes and improvements:</p>
  <ul>
  <li>FDTD mode now supports importing a user-generated multi-material grid (tutorial upcoming).</li>
  <li>New compressed file format (produces self-contained .zip files).</li>
  <li>Saving and loading of files now done entirely through standard system file dialogs.</li>
  <li>File access now supports XDG portals; Flatpak no longer needs nor requests home folder access.</li>
  <li>Improved interaction with clusters/SLURM script generation.</li>
  <li>Made the user interface more compact and organized.</li>
  <li>Support dynamic loading of new crystal database files.</li>
  </ul>
  </description>
  </release>
  <release version="2023.09" date="2023-09-04" urgency="high">
  <description>
  <p>This release adds the following fixes and improvements:</p>
  <ul>
  <li>Adds a new CPU-based propagation mode on Linux/Windows using C++ std::execution::par instead of OpenMP, which on some computers is nearly twice as fast</li>
  <li>MacOS version now uses Grand Central Dispatch for multithreading, with a slight performance improvement.</li>
  <li>Applies PEMDAS rules to the input arguments of sequence functions. In short: previously an input of 1+2*3 would give 9 because the operators were resolved from left to right, now it has the correct behavior (i.e. 7).</li>
  <li>Multiple small optimizations to propagation kernels with a small (percent-level) performance improvement</li>
  <li>Various bug fixes and stability enhancements (mostly regarding mutex locks).</li>
  <li>A button to collapse the data input panel so that the plots and images fill the whole window</li>
  </ul>
  </description>
  </release>
  <release version="2023.08.04" date="2023-08-15" urgency="high">
  <description>
  <p>This is the initial Flatpak release.</p>
  </description>
  </release>
  </releases>
  <url type="homepage">https://github.com/NickKarpowicz/LightwaveExplorer</url>
  <description>
    <p>
      Lightwave explorer is an open source nonlinear optics simulator, intended to be fast, visual, and flexible for students and researchers to play with ultrashort laser pulses and nonlinear optics without having to buy a laser first. Supports both CUDA and CPU calculations. Its purpose and goals are:
    </p>
    <ul>
      <li>Easily-extensible database of materials</li>
      <li>Multiple physical models, including the unidirectional nonlinear wave equation and finite-difference time-domain approaches.</li>
      <li>Efficient code so that complicated systems can be simulated in 3D: Real laser pulses can be messy, and if they weren't so before a nonlinear crystal, there's a good chance they are after. Multidimensional simulations open up the weird world of spatiotemporal couplings. You have options for very fast simulations when there's a symmetry to use (e.g. cylindrical), alongside fully 3D propagation</li>
      <li>A graphical interface that lets you see what you're doing</li>
      <li>A flexible sequence mode to string together elements: not just nonlinear crystals, also spherical or parabolic mirrors, apertures, filters, free space propagation and more</li>
      <li>Fitting/optimization routines</li>
      <li>A Python module for easy postprocessing</li>
    </ul>
  </description>
  
  <launchable type="desktop-id">io.github.NickKarpowicz.LightwaveExplorer.desktop</launchable>
  <screenshots>
    <screenshot environment="default">
      <caption>The Lightwave Explorer main window in dark mode, with additional plots of the real-space and momentum-space fields</caption>
      <image>https://raw.githubusercontent.com/NickKarpowicz/LightwaveExplorer/master/Documentation/Images/flatpakScreenshot.png</image>
    </screenshot>
    <screenshot type="plasma:light">
      <caption>The Lightwave Explorer main window in light mode showing a simulation of an optical parametric amplifier</caption>
      <image>https://raw.githubusercontent.com/NickKarpowicz/LightwaveExplorer/master/Documentation/Images/flatpakScreenshot_light.png</image>
    </screenshot>
  </screenshots>

  <branding>
    <color type="primary" scheme_preference="light">#bbffff</color>
    <color type="primary" scheme_preference="dark">#613583</color>
  </branding>

</component>
